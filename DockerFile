# # -*- mode: dockerfile -*-

# # ------------------------------------------------------------------------------
# # Cargo Build Stage
# # ------------------------------------------------------------------------------

# FROM rustlang/rust:nightly-alpine3.12 AS builder

# # Update the system as needed
# RUN apk update

# # Install typical system packages we use for building our app.
# RUN apk add binutils build-base ca-certificates curl file g++ gcc libressl-dev make patch postgresql rust sqlite

# # Install Rust with typical settings and as a typical user.
# # RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# # # Install Rust nightly and target for musl 
# # RUN . ~/.cargo/env && rustup toolchain install nightly 
# # RUN . ~/.cargo/env && rustup default nightly
# # RUN . ~/.cargo/env && rustup target add x86_64-unknown-linux-musl

# WORKDIR /usr/src/market_service

# COPY Cargo.toml Cargo.toml

# RUN mkdir src/

# RUN echo "fn main() {println!(\"if you see this, the build broke\")}" > src/main.rs

# RUN RUSTFLAGS="-C target-feature=-crt-static" cargo build --release --target=x86_64-unknown-linux-musl

# RUN rm -f target/x86_64-unknown-linux-musl/release/deps/market_service*

# COPY . .

# # ------------------------------------------------------------------------------
# # Final Stage
# # ------------------------------------------------------------------------------

# FROM gcr.io/distroless/cc-debian10

# RUN addgroup -g 1000 market_service

# RUN adduser -D -s /bin/sh -u 1000 -G market_service market_service

# WORKDIR /home/market_service/bin/

# COPY --from=builder /usr/src/market_service/target/x86_64-unknown-linux-musl/release/market_service .

# RUN chown market_service:market_service market_service

# USER market_service

# CMD ["./market_service"]

FROM rustlang/rust:nightly-alpine3.12 AS build

COPY . ./

# RUN sudo chown -R rust:rust .

RUN cargo build --release --target=x86_64-unknown-linux-musl

FROM scratch

COPY --from=build /home/rust/src/target/x86_64-unknown-linux-musl/release/market_service /

# ENV PORT 8181
# EXPOSE ${PORT}

CMD ["/market_service"]